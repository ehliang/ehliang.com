{
  "projects": {
    "hackathons": [
        {
        "projectName": "heyKanye",
        "hackathon": "Hack the North (2016)",
        "location": "Waterloo, ON",
        "time": "48h",
        "description": "In recent time, data science has become relevant in every single field. We wanted to see how we can use it to create music. HeyKanye takes bulk lyrical data from artists of any genre and applies statistical modelling to produce structurally accurate and meaningful music lyrics. It then syncs it to beats and uses text-to-speech to drop a sick new track. It detects the parts of a track with repetitive patterns to determine beat, chorus location, etc, sync lyrics to beats, learns proper chorus-verse structure for structurally accurate songs, implements multiple rhyme schemes within songs, analyzes common word-to-word relationships to simulate meaning, analyzes common lyrical grammar to create musically relevant songs.",
        "image": "src/img/icons/hackthenorth.png",
        "link": [
          {
            "linkName": "GitHub",
            "link": "https://github.com/ehliang/rapGen"
          },
          {
            "linkName":"Twitter",
            "link":"https://twitter.com/HackTheNorth/status/777591815469867009"
          }
        ],
        "builtWith": [
          {
            "tech": "Python"
          },
          {
            "tech": "Microsoft Azure Machine Learning Suite"
          },
          {
            "tech": "SQL Server"
          },
          {
            "tech": "Hidden Markov Models"
          },
          {
            "tech": "libRosa"
          },
          {
            "tech": "node.js"
          },
          {
            "tech": "Bootstrap"
          }
        ]
      },
      {
        "projectName": "dCharge",
        "hackathon": "NordicIOT Hackathon (2016)",
        "location": "Malm√∂, Sweden",
        "time": "48h",
        "description": "Having been invited to Sweden for the Nordic Internet of Things hacakthon, we were tasked with a choice of two problems to address: Intelligent Healthcare and Intelligent Buildings. We chose healthcare and developed a platform which would reduce the amount of monitoring nurses need to make for post-operation patients. dCharge makes use of the Moto 360 watch to take periodic records of a patient's heart rate and monitor sudden spikes and drops. Periodic checkups will pe provided to the patient and ask them questions regarding specific elements of their well-being. Questions are tailored to the condition of the patient and provide insight for the doctor. If patients have additional concerns, they can record to their watch and the doctors have access to the logs through their React webpanel. The watch communicates with the phone and the phone communicates with our server using socket.io.",
        "image": "src/img/icons/Nordic.png",
        "link": [
          {
            "linkName": "GitHub",
            "link": "https://github.com/AroundTheLines/dCharge"
          }
        ],
        "builtWith": [
          {
            "tech": "Android Java"
          },
          {
            "tech": "Android Wear Java"
          },
          {
            "tech": "node.js"
          },
          {
            "tech": "webpack"
          },
          {
            "tech": "Express"
          },
          {
            "tech": "React"
          },
          {
            "tech": "Bootstrap"
          },
          {
            "tech": "socket.io"
          }
        ]
      },
      {
        "projectName": "TiN",
        "hackathon": "MHacks: Refactor (2016)",
        "location": "University of Michigan, Ann Arbor",
        "time": "36h",
        "description": "Travellers often find themselves in foreign countries and commonly travel in groups. When split apart, finding one another is difficult, especially if the place is foreign and you don't know any landmarks. Some of us use Google Maps, but as every jetsetter knows, data plans are expensive. However, text plans are not. With the our Android App, users report their location and send their coordinates through SMS on Twilio and uploads to Firebase. Our node.js server monitors for changes and uses the Google Dimensions Matrix and Google Places API to locate the closest public location between two users. Whether its a coffee shop or a park, it provides directions for both users to arrive at the location.",
        "image": "src/img/icons/Mhacks.png",
        "link": [
          {
            "linkName": "GitHub",
            "link": "https://github.com/ehliang/TIN"
          },
          {
            "linkName": "Devpost",
            "link": "http://devpost.com/software/tourist-information-network"
          }
        ],
        "builtWith": [
          {
            "tech": "Android Java"
          },
          {
            "tech": "node.js"
          },
          {
            "tech": "Firebase"
          },
          {
            "tech": "Twilio API"
          },
          {
            "tech": "Google Maps API"
          },
          {
            "tech": "Google Places Nearby API"
          },
          {
            "tech": "Google Dimensions Matrix"
          }
        ]
      },
      {
        "projectName": "XpressCart",
        "hackathon": "PennApps XIII (2016)",
        "location": "University of Pennsylvania, Philadelphia",
        "time": "36h",
        "description": "Winner of the Capital One Nessie API Prize. Even with the rise of self-checkouts, there's still a lot of hassle. Everyone still has to line up to check out. What we developed with XpressCart is an Android application which allows for self-checkout by using your own smartphone. By employing the ZXING API, customers scan their items and place them into our Ardino-embedded shopping cart. The app sends an expected value to the Arduino through the NFC shield and the Ardunio validates this with what is measured on the scale. When it comes to checkout, patrons use the Nessie API to submit a direct payment from their bank account and generate a receipt. Merchants can customize the same base app template.",
        "image": "src/img/icons/Penn.png",
        "link": [
          {
            "linkName": "GitHub",
            "link": "https://github.com/ehliang/Xpresscart"
          },
          {
            "linkName": "Devpost",
            "link": "http://devpost.com/software/xpresscart-ypct9e"
          }
        ],
        "builtWith": [
          {
            "tech": "Android Java"
          },
          {
            "tech": "ZXING API"
          },
          {
            "tech": "Capital One Nessie API"
          },
          {
            "tech": "Arduino"
          },
          {
            "tech": "NFC Shield"
          }
        ]
      },
      {
        "projectName": "LeapStacks",
        "hackathon": "Deltahacks II (2016)",
        "location": "McMaster University, Hamilton",
        "time": "24h",
        "description": "With the rise of Virtual Reality, the next generation of children will likely be raised with its availability. Therefore, to streamline their integration and knowledge of the virtual world, we developed LeapStacks. LeapStacks is a C# Unity application which allowd for the generation of multicoloured blocks that are physically placeable. Kids can use them like legos through the LEAP motion controller and make their own structures without physical constraints. The alternative game mode is a shape-in-hole playboard to grasp finer motor skills. Rendered on the Rift.",
        "image": "src/img/icons/delta.png",
        "link": [
          {
            "linkName": "GitHub",
            "link": "https://github.com/ehliang/LeapStacks"
          },
          {
            "linkName": "Devpost",
            "link": "http://devpost.com/software/leapstax"
          }
        ],
        "builtWith": [
          {
            "tech": "C#"
          },
          {
            "tech": "Unity"
          },
          {
            "tech": "Oculus Rift"
          },
          {
            "tech": "Leap Motion"
          }
        ]
      },
      {
        "projectName": "Myo-Unlock",
        "hackathon": "Waterloo Tech Retreat (2015)",
        "location": "University of Waterloo, Waterloo",
        "time": "12h",
        "description": "First project done at a hackathon. The point of myo-unlock was to make the authentication process easier. We currently run the risky choice between having a forgettable password or an insecure one. For many people, their alphanumeric memory doesn't come close to their muscle memory which is why I wanted to adopt the myo armband as an alternative authentication method. By performing a series of gestures, our python program converts these motions into a long random character string. This is then used to authenticate and log the user in on GMail.",
        "image": "src/img/icons/tech retreat.png",
        "link": [
          {
            "linkName": "GitHub",
            "link": "https://github.com/ehliang/myo-unlock"
          },
          {
            "linkName": "Devpost",
            "link": "http://devpost.com/software/motion-based-secure-entry"
          }
        ],
        "builtWith": [
          {
            "tech": "Python"
          },
          {
            "tech": "myo armband"
          }
        ]
      }
    ],
    "personal": [
      {
        "projectName": "ehliang.com",
        "description": "This website. Personal website made without a template to further explore React. Uses webpack-compressed React and SASS on the frontend. Wrote code to dynamically take projects data from a json file and generate portfolio squares, allowing easy addition of future projects.",
        "image": "src/img/ehliang.png",
        "link": [
          {
            "linkName": "GitHub",
            "link": "https://github.com/ehliang/ehliang.com"
          },
          {
            "linkName": "Recursion",
            "link": "http://ehliang.com"
          }
        ],
        "builtWith": [
          {
            "tech": "React"
          },
          {
            "tech": "webpack"
          },
          {
            "tech": "Bootstrap"
          },
          {
            "tech": "SASS"
          },
          {
            "tech": "Google Analytics"
          },
          {
            "tech": "Google ReCaptcha"
          }
        ]
      },
      {
        "projectName": "Gitalytics",
        "description": "Project currently being developed in Velocity. Having spoken to multiple tech recruiters, there was the rising problem of coders being less qualified than indicated. Many developers put their projects on GitHub but no accurate assessments can be made. There are instances of people not contributing to group projects or filling templates in and not generating real code. We wanted to catch these coders and find good ones so we created Gitalytics. This analyzes contributions to open source code and true work done on projects to generate a score for candidates. This score provides a more universal metric for employers to assess on and allows them to find good candidates.",
        "image": "src/img/gitalytics.png",
        "link": [
          {
            "linkName": "GitHub",
            "link": "https://github.com/ehliang/Gitalytics"
          }
        ],
        "builtWith": [
          {
            "tech": "node.js"
          },
          {
            "tech": "Express"
          },
          {
            "tech": "React"
          },
          {
            "tech": "GitHub API"
          },
          {
            "tech": "OAuth 2"
          }
        ]
      },
      {
        "projectName": "LaunchPad Controller",
        "description": "I received some LED strips to put in my Desktop computer but didn't have a good way to turn them on or off. With that in mind, I built my own LED controller using the Launchpad MSP430 board I had lying around. It connects to a USB header for serial data and stores whichever mode it was on to flash memory. I included a beat detect mode for funsies using the Minim library.",
        "image": "src/img/energia.png",
        "link": [
          {
            "linkName": "GitHub",
            "link": "https://github.com/ehliang/LaunchPadDimming"
          },
          {
            "linkName": "YouTube",
            "link": "https://youtu.be/UL-QoU3faXQ"
          }
        ],
        "builtWith": [
          {
            "tech": "C"
          },
          {
            "tech": "Processing 3"
          },
          {
            "tech": "LaunchPad MSP430"
          },
          {
            "tech": "Minim Library"
          }
        ]
      },
      {
        "projectName": "RaspPiGoodMorning",
        "description": "Having been inspired by the Raspberry Pi magic mirrors, I wanted to create something for my Raspberry Pi that would wake me up in the mornings, show me the weather and my agenda when I leave for school and give me the top news articles. Runs on a node.js server and wakes up the connected display using the libCEC library. Currenly only displays weather.",
        "image": "src/img/raspi.png",
        "link": [
          {
            "linkName": "GitHub",
            "link": "https://github.com/ehliang/RaspPiGoodMorning"
          }
        ],
        "builtWith": [
          {
            "tech": "node.js"
          },
          {
            "tech": "AngularJS"
          },
          {
            "tech": "libCEC library"
          },
          {
            "tech": "Raspberry Pi"
          }
        ]
      },
      {
        "projectName": "vocem",
        "description": "The application was designed to do recordings of conversations and cut out sections of silence for smoother playback. Unfortunately, the mainpulation of recordings proved rather difficult. The project is currently on hold.",
        "image": "src/img/vocem.png",
        "link": [
          {
            "linkName": "GitHub",
            "link": "https://github.com/ehliang/vocem"
          }
        ],
        "builtWith": [
          {
            "tech": "Objective C"
          }
        ]
      }
    ]
  }
}